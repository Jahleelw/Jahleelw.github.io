<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜里的狸猫</title>
  
  <subtitle>black eyes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nightcivet.live/"/>
  <updated>2019-12-31T09:02:39.844Z</updated>
  <id>https://nightcivet.live/</id>
  
  <author>
    <name>纯黑色</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>坚持更新＋减肥日记＋奇怪三餐＋深度锻炼</title>
    <link href="https://nightcivet.live/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/"/>
    <id>https://nightcivet.live/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/</id>
    <published>2019-12-17T07:48:26.000Z</published>
    <updated>2019-12-31T09:02:39.844Z</updated>
    
    <content type="html"><![CDATA[<h4 id="自律与自由"><a href="#自律与自由" class="headerlink" title="自律与自由"></a>自律与自由</h4><p>大病一场，几乎中午都没吃。<br>一称体重还吓了自己一跳，比上一次还重了嘛。<br>但其实总体还挺标准，也只是脂肪率在超标与标准的边缘。<br>所以定个小目标，减减脂吧，也不是为了减体重，顺便增增肌，重点也不错的。<br>目的是为了减那脂肪率。突然自律- . =</p><p>那么，起点是这样<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/webwxgetmsgimg.jpeg" alt="起点"></p><a id="more"></a><h4 id="2019-12-16"><a href="#2019-12-16" class="headerlink" title="2019.12.16"></a>2019.12.16</h4><p>早餐：都城里的饺子加豆浆<br>午餐：睡过去了<br>晚餐：吃了两个鸡蛋，自己煮了麦片加个脱脂牛奶，加个柿子。</p><p>设备还没准备好，第一天比较粗糙。麦片无糖像不知道吃什么一样。最后忍不住往里面放榨菜。。</p><h4 id="2019-12-17"><a href="#2019-12-17" class="headerlink" title="2019.12.17"></a>2019.12.17</h4><p>早餐：都城炒面豆浆<br>午餐：额<br>晚餐：俩鸡蛋，香蕉牛奶麦片，煮了一锅青菜，加个柿子。</p><p>锻炼了一会儿，跑了六分钟的跑步机（实在很尴尬在公司跑），搞搞肱二和背，再平板撑一撑，搞完煮完都10点了挺晚了。<br>emmm导致都没注意摆盘有点儿丑，再称一称竟然还多了。。我寻思我哪里摄入脂肪了。。<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day2.jpeg" alt="day2"></p><h3 id="2019-12-18"><a href="#2019-12-18" class="headerlink" title="2019.12.18"></a>2019.12.18</h3><p>早餐：都城炒面豆浆<br>午餐：emmm<br>晚餐：俩鸡蛋＋蒸蛋＋西兰花青瓜＋柿子</p><p>今天深了下蹲，搞了搞小手和肩，再平板撑一撑。搞完又是十点多才吃东西。。<br>不过时间再赶也得摆摆盘<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day3.jpeg" alt="day3"></p><h3 id="2019-12-19"><a href="#2019-12-19" class="headerlink" title="2019.12.19"></a>2019.12.19</h3><p>早餐：都城饺子豆浆<br>午餐：。。<br>晚餐：俩鸡蛋+蒸蛋+海鲜菇青瓜+柿子+牛奶</p><p>去健身房跑步了！30分钟刚好10圈哇。一回去随意练练就立马煮了赶时间。。也还行赶在九点左右就弄好了。<br>健身教练疯狂针对。。你的形象要注意吗？你为什么目标这么低呢？我不用，我就是没有追求。他放弃我了哈哈哈。<br>芥末也到了，嗨呀到最后发现最喜欢的竟然是青瓜，好吃得要命。额不对我必须得吃麦片才行。。虽然很难吃。<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day4.jpeg" alt="day4"></p><h3 id="2019-12-20"><a href="#2019-12-20" class="headerlink" title="2019.12.20"></a>2019.12.20</h3><p>早餐：都城炒面豆浆<br>午餐：- -<br>晚餐：寿司，，，，，，，</p><p>偶然，绝对偶然的看了一篇文章说寿司可以减肥。。对的我信了。可是做出的寿司上面沾的沙拉酱芝士酱等等甜得要命这些是什么东西呢。。<br>回到去称一称不忍直视。。<br>好吧不去了。<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day5.jpeg" alt="day5"></p><h3 id="2019-12-21"><a href="#2019-12-21" class="headerlink" title="2019.12.21"></a>2019.12.21</h3><p>早餐：。。<br>午餐：香蕉牛奶麦片<br>晚餐：蒸蛋+海鲜菇+青瓜+柿子</p><p>周六，睡得死死的。<br>知道明天冬至回家会吃很多。去健身房跑了步减轻罪恶。。八点的车，七点半要出发。跑完步五点半，买完菜回到去六点，问题来了，我如何做到在六点到七点半这一个半小时内完成做饭+吃饭+洗碗+洗衣服+洗澡+晾衣服+锻炼呢？答案是我开启了多线程。。<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day6.jpeg" alt="day6"></p><h3 id="2019-12-22"><a href="#2019-12-22" class="headerlink" title="2019.12.22"></a>2019.12.22</h3><p>早餐：。<br>午餐：痛风套餐<br>晚餐：痛风套餐</p><p>冬至。回家。<br>很久才回一次家，陪伴家里很久的Lucky死了，狗的死亡总是那么有灵，听得都感概万千。<br>老爸疯狂下厨，海鲜肥鸡火锅鱼片红酒无处不在，我再次回到了饕餮状态。。<br>也不可能说我不吃吧。</p><h3 id="2019-12-23"><a href="#2019-12-23" class="headerlink" title="2019.12.23"></a>2019.12.23</h3><p>早餐：都城炒面豆浆<br>午餐：<br>晚餐：腊肠蒸蛋+牛奶+苹果+咸鱼+青瓜海鲜菇</p><p>人生，就是那么的大起大落。。昨天才痛风套餐完今天就跟个和尚一样。。<br>没错那是咸鱼，我爸给来的，是真的好吃。。健不健康另说。<br>蒸蛋下面有腊肠，也是老爸给的，虽然有点油。<br>额在超市里发现这才是海鲜菇，以前吃的叫白玉菇。。<br>刷着刷着发现吃完高蛋白的东西吃柿子会出事。。我去。。<br>挺早下班跑完步回去又是多线程进行锻炼做饭洗衣服，不过这样给锻炼的强度有点低。在事情做完后吃东西的时间又快十点了我太难了。<br><img src="/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/day7.jpeg" alt="day7"></p><h3 id="2019-12-24"><a href="#2019-12-24" class="headerlink" title="2019.12.24"></a>2019.12.24</h3><p>三餐和昨天差不多。。就是回到去都跑步机都满人了这绝对不是不去跑步的借口。。</p><h3 id="2019-12-25"><a href="#2019-12-25" class="headerlink" title="2019.12.25"></a>2019.12.25</h3><p>三餐还是差不多。只不过菇换成了西兰花。切出来才发现西兰花怎么这么多。<br>跑完步都九点了。。做完饭吃东西都十点多了。。还要洗衣服。。<br>不过自己眼睛白了很多，睡觉也好了不少。<br>坚持有一段时间了，要继续下去。</p><h3 id="往后"><a href="#往后" class="headerlink" title="往后"></a>往后</h3><p>好啦今年的最后一天了，这几天里一向往常，照片都懒得拍啦；<br>没有想象中难受，毕竟我从来都不挑食；<br>运动也是，本来我就运动细胞很足好吗；</p><p>效果可能还不显著，但起码脂肪18%了在正常值，体重降了两斤吧哈哈哈<br>最终也不是为了减很多，最好保持一下啦~</p><p>愿2020坚持锻炼~<br>饮食更具健康~<br>那么就结帖啦~</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;自律与自由&quot;&gt;&lt;a href=&quot;#自律与自由&quot; class=&quot;headerlink&quot; title=&quot;自律与自由&quot;&gt;&lt;/a&gt;自律与自由&lt;/h4&gt;&lt;p&gt;大病一场，几乎中午都没吃。&lt;br&gt;一称体重还吓了自己一跳，比上一次还重了嘛。&lt;br&gt;但其实总体还挺标准，也只是脂肪率在超标与标准的边缘。&lt;br&gt;所以定个小目标，减减脂吧，也不是为了减体重，顺便增增肌，重点也不错的。&lt;br&gt;目的是为了减那脂肪率。突然自律- . =&lt;/p&gt;
&lt;p&gt;那么，起点是这样&lt;br&gt;&lt;img src=&quot;/2019/12/17/%E5%9D%9A%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%8B%E5%87%8F%E8%82%A5%E6%97%A5%E8%AE%B0%EF%BC%8B%E5%A5%87%E6%80%AA%E4%B8%89%E9%A4%90%EF%BC%8B%E6%B7%B1%E5%BA%A6%E9%94%BB%E7%82%BC/webwxgetmsgimg.jpeg&quot; alt=&quot;起点&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://nightcivet.live/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>第一次使用华为云电脑-云电脑会指数式火热起来吗</title>
    <link href="https://nightcivet.live/2019/12/10/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%8D%8E%E4%B8%BA%E4%BA%91%E7%94%B5%E8%84%91-%E4%BA%91%E7%94%B5%E8%84%91%E4%BC%9A%E6%8C%87%E6%95%B0%E5%BC%8F%E7%81%AB%E7%83%AD%E8%B5%B7%E6%9D%A5%E5%90%97/"/>
    <id>https://nightcivet.live/2019/12/10/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%8D%8E%E4%B8%BA%E4%BA%91%E7%94%B5%E8%84%91-%E4%BA%91%E7%94%B5%E8%84%91%E4%BC%9A%E6%8C%87%E6%95%B0%E5%BC%8F%E7%81%AB%E7%83%AD%E8%B5%B7%E6%9D%A5%E5%90%97/</id>
    <published>2019-12-10T03:22:45.000Z</published>
    <updated>2019-12-10T07:22:44.257Z</updated>
    
    <content type="html"><![CDATA[<h4 id="突然成为菊粉"><a href="#突然成为菊粉" class="headerlink" title="突然成为菊粉"></a>突然成为菊粉</h4><p>花了2k买了个2手i6s，充电一小时，使用一小时。。系统再好也顶不住啊，况且还算是一个手机依赖户。<br>这2k分期款都没还清，已经换了菊机，用着用着真香。。</p><p>虽说挺讨厌那些生态式的发展，因为似乎它绑定了你限制了你。<br>不过其实当这个生态足够优秀，进去了之后真香。。</p><a id="more"></a><h4 id="云"><a href="#云" class="headerlink" title="云"></a>云</h4><p>沫哥总喜欢讨论未来。<br>这里提到一个挺有意思的点，看看当代青年，别说PC机了，连笔记本电脑都少用，全都是用手机就能解决。</p><p>说白了手机跟电脑有区别吗？其实也不大。</p><p>桌面PC还有意义吗？网速够的情况下一个屏幕一个拓展坞就等于一台电脑了，配置超高那种。</p><p>那么未来是不是云电脑的天下呢，当5G普及的时候？当实时性够高的时候？</p><p>后话后话+.+，不管怎样今天体验一把华为云。用华为云玩一把云顶之奕下下棋。</p><h4 id="体验极差"><a href="#体验极差" class="headerlink" title="体验极差"></a>体验极差</h4><p>首先这个。。。配置最高是8G4核，额虽然肯定是够用。<br>三块一小时，还是非常便宜的。</p><p>连接好了打开LOL，网速极不稳定。。<br>用右下角屏幕键盘输入了帐号，密码却死活输入不了。百度一下试一下悬浮球里的键盘又行了。<br>可能是我的4G卡狠辣鸡。卡得要命。有个显示网速的悬浮球，安静时35ms延迟，疯狂时1000+ms。。<br>打斗时，基本都是开始的时候一卡，等一会儿后打完了，怎么赢怎么输全靠自己想象。。<br>中途不能切应用，锁屏也不行。不然都要重新连接云电脑。</p><p>还好有个无线鼠标，连上无线点棋子还精准一点，但这一卡一卡的选秀我牌都差点卡错了~</p><p>额掠食者毒沙漠刺客钢铁。前期湖了D到个三星大嘴。<br>后期两星辛吉德也来了，emmmmm。<br>虽然网速体验很差，但吃鸡体验极好。。</p><h4 id="希望在明天"><a href="#希望在明天" class="headerlink" title="希望在明天"></a>希望在明天</h4><p>挺希望能体验到有那么一天，把童年时梦寐以求的PC机全都通通淘汰掉，人们办公娱乐学习都是使用云即可。既节省了无数资源，还省钱。</p><p>这些又大又笨重的机器，就让它们在云端吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;突然成为菊粉&quot;&gt;&lt;a href=&quot;#突然成为菊粉&quot; class=&quot;headerlink&quot; title=&quot;突然成为菊粉&quot;&gt;&lt;/a&gt;突然成为菊粉&lt;/h4&gt;&lt;p&gt;花了2k买了个2手i6s，充电一小时，使用一小时。。系统再好也顶不住啊，况且还算是一个手机依赖户。&lt;br&gt;这2k分期款都没还清，已经换了菊机，用着用着真香。。&lt;/p&gt;
&lt;p&gt;虽说挺讨厌那些生态式的发展，因为似乎它绑定了你限制了你。&lt;br&gt;不过其实当这个生态足够优秀，进去了之后真香。。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://nightcivet.live/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我也能自己制造交叉工具编译链了之Crosstool-ng</title>
    <link href="https://nightcivet.live/2019/12/06/%E6%88%91%E4%B9%9F%E8%83%BD%E8%87%AA%E5%B7%B1%E5%88%B6%E9%80%A0%E4%BA%A4%E5%8F%89%E5%B7%A5%E5%85%B7%E7%BC%96%E8%AF%91%E9%93%BE%E4%BA%86%E4%B9%8BCrosstool-ng/"/>
    <id>https://nightcivet.live/2019/12/06/%E6%88%91%E4%B9%9F%E8%83%BD%E8%87%AA%E5%B7%B1%E5%88%B6%E9%80%A0%E4%BA%A4%E5%8F%89%E5%B7%A5%E5%85%B7%E7%BC%96%E8%AF%91%E9%93%BE%E4%BA%86%E4%B9%8BCrosstool-ng/</id>
    <published>2019-12-06T08:35:05.000Z</published>
    <updated>2019-12-09T09:03:45.164Z</updated>
    
    <content type="html"><![CDATA[<h4 id="速度与激情"><a href="#速度与激情" class="headerlink" title="速度与激情"></a>速度与激情</h4><p><del>非常隐秘不知道怎么说出口</del>地说，某芯片采用mips架构，可是速度着实很尴尬。<br>背后的一切不谈，我们要交叉编译，在x86上编译mips架构的程序。</p><p>工具链一听非常底层，可软件这个世界总有大佬不断的探索去降低制造成本和难度，并且开源。<br>工具介绍可以去<a href="http://crosstool-ng.github.io/" target="_blank" rel="noopener">官网</a>或者<a href="https://blog.csdn.net/cztqwan/article/details/79428341" target="_blank" rel="noopener">轮子</a>看，可以简单的说成这是一个易用的制造工具链工具。</p><p>这里记录一下制造mips工具链的过程，为的是能激情的带着速度编译程序并跑起来。</p><a id="more"></a><h4 id="和大家都差不多的步骤"><a href="#和大家都差不多的步骤" class="headerlink" title="和大家都差不多的步骤-.-"></a>和大家都差不多的步骤-.-</h4><p><del>虽然都差不多但还是当作前无古人地记一下</del><br>根据踩过的雷，保持在用户状态下操作（鄙视整天一开终端立刻sudo的某自己）。</p><p>1.下载crosstool-ng工具<br>    这个简单，直接<a href="http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.xz" target="_blank" rel="noopener">官网下载</a>，这个时候的最新版应该是1.24吧。由于是用户，我在自己的/home/jal/下新建了一个文件夹作为此工程的目录，所以东西放到/home/jal/mips-linux-obj/目录下。</p><p>2.解压编译安装<br>    运行tar xvf 解压，新建一个安装目录NG_install，进入crosstool源码目录运行./configure –prefix=/home/jal/mips-linux-obj/NG_install、make、make install。如果没有意外，顺利完成后在NG_install目录下能看到bin libexec share三个目录生成。</p><p>3.添加环境变量<br>    再次强调是用户模式，修改~/.bashrc，末尾添加PATH=$PATH:/home/jal/mips-linux-obj/mips-linux-obj/bin，再source一下环境变量搞定</p><p>4.配置制作环境<br>    先新建NG_build和NG_src和tool三个目录，NG_build用作构建工具链的目录，里面有构建日志，tool用于存放制好的工具链，NG_src用于存放制造工具链过程中下载的工具源码包。至此整个工程的目录都差不多了，不厌其烦地再显示一次，主要就是/home/jal/mips-linux-obj/目录下，有NG_build、NG_install、NG_src、tool和crosstool-ng-1.24.0这几个目录（够了）。工具链配置和内核配置很很很像，进入NG_build运行ct-ng list-samples查看支持的硬件配置，找到自己想要的直接ct-ng mipsel-unknown-linux-gnu，他会复制这个硬件配置作为本目录的.config文件，然后运行ct-ng menuconfig 命令运行一个ncurses界面进行细化配置（果然就是内核配置方法啊亲）</p><p>​    在Paths and misc options —&gt; 这个选项中设置文件路径，新建的目录要用到了<br>在 <strong>* Paths *</strong>下一行敲入/home/jal/mips-linux-obj/NG_src/；在Working diretory下一行敲入/home/jal/mips-linux-obj/tool；用到它们了。</p><p>​    在Target option —&gt; 这个选项中设置芯片特性，介入某芯片 <strong>* Option for mips *</strong> 选ABI（n64）Bitness: 选(64-bit)<br>，architecture level 敲mips64，Floationg point: 选(hardware(FPU))。</p><p>​    按一下save，配置就这么好了。</p><p>5.跑它！<br>    执行ct-ng build跑起来！<br>   过程可能会出错，他是先从网上下载一下需要用到的源码工具包在解压构建，包括内核。如果这时下载链接崩了我也就崩了，这时可以从别的地方下载对应版本的包放到NG_src目录下，就可以了。<br>   我那个年代，需要这些：<br>   automake-1.16.1.tar.xz<br>   binutils-2.32.tar.xz<br>   expat-2.2.6.tar.bz2<br>   gcc-8.3.0.tar.xz<br>   gdb-8.2.1.tar.xz<br>   gettext-0.19.8.1.tar.xz<br>   glibc-2.28.tar.xz<br>   glibc-2.29.tar.xz<br>   gmp-6.1.2.tar.xz<br>   isl-0.20.tar.xz<br>   libiconv-1.15.tar.gz<br>   linux-4.20.8.tar.gz<br>   mpc-1.1.0.tar.gz<br>   mpfr-4.0.2.tar.xz<br>   ncurses-6.1.tar.gz<br>   strace-4.26.tar.xz<br>   zlib-1.2.11.tar.gz<br>   跑挺久的。。它还会帮你算时间，我用了一个钟。</p><h4 id="来了来了它真的来了"><a href="#来了来了它真的来了" class="headerlink" title="来了来了它真的来了"></a>来了来了它真的来了</h4><p>去tool目录查看成品！这一看就要设置环境变量。<br>这里就是编译的一堆宏定义了，一般都是写一个environment文件，里面一堆export，每次用工具链之前source一下就好。</p><p>那基于一个开源嵌入式的文件修改这个environment，暂时来说把文件写成这样，当然后续如果要改还是得改改这个文件。</p><p>文件里定义了交叉工具链存放的位置，把对应的目录名字配成自己的，每次source之后就能看到有这个工具链了。</p><p><a href="/download/environment-setup-mips64r2el-poky-linux" ">environment</a></p><h4 id="编一下它"><a href="#编一下它" class="headerlink" title="编一下它"></a>编一下它</h4><p>看到那个环境文件定义的链接库，链接头文件，CPPFLAGS、LDFLAGS等等，所以编一个最简单的helloworld它可能都说找不到那个stdio.h，其实也只需要把stdio.h放到对应的链接头文件目录就可以了。依赖库会比较麻烦，毕竟库也有架构之分，最好能直接从仓库什么的拿到对应架构的依赖库吧，依赖库的依赖库，需要添加-rpath和-rpath-link选项，其实也差不了多少。</p><p>那么source完之后编一下hello：mips64el-3a-linux-gnu-gcc hello.c -o hello<br>file一下编出来的可执行程序看到架构和其他东西都正确。<br>当然条件允许还可以放到目标机运行一下。</p><h4 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h4><p>后续编译工程项目，带有Makefile那些，保证Makefile里CC和一些链接目录正确，和对应的库齐全，基本是没有问题的。</p><p>嗨呀，那么费劲。就为了个速度。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;速度与激情&quot;&gt;&lt;a href=&quot;#速度与激情&quot; class=&quot;headerlink&quot; title=&quot;速度与激情&quot;&gt;&lt;/a&gt;速度与激情&lt;/h4&gt;&lt;p&gt;&lt;del&gt;非常隐秘不知道怎么说出口&lt;/del&gt;地说，某芯片采用mips架构，可是速度着实很尴尬。&lt;br&gt;背后的一切不谈，我们要交叉编译，在x86上编译mips架构的程序。&lt;/p&gt;
&lt;p&gt;工具链一听非常底层，可软件这个世界总有大佬不断的探索去降低制造成本和难度，并且开源。&lt;br&gt;工具介绍可以去&lt;a href=&quot;http://crosstool-ng.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;或者&lt;a href=&quot;https://blog.csdn.net/cztqwan/article/details/79428341&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;轮子&lt;/a&gt;看，可以简单的说成这是一个易用的制造工具链工具。&lt;/p&gt;
&lt;p&gt;这里记录一下制造mips工具链的过程，为的是能激情的带着速度编译程序并跑起来。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://nightcivet.live/tags/linux/"/>
    
      <category term="编译" scheme="https://nightcivet.live/tags/%E7%BC%96%E8%AF%91/"/>
    
      <category term="mips" scheme="https://nightcivet.live/tags/mips/"/>
    
      <category term="技术" scheme="https://nightcivet.live/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>傻瓜式的LinuxU盘自动挂载-C语言</title>
    <link href="https://nightcivet.live/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/"/>
    <id>https://nightcivet.live/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/</id>
    <published>2019-12-02T08:02:01.000Z</published>
    <updated>2019-12-10T07:23:08.472Z</updated>
    
    <content type="html"><![CDATA[<h4 id><a href="#" class="headerlink" title></a></h4><h4 id="能work就行"><a href="#能work就行" class="headerlink" title="能work就行"></a>能work就行</h4><p>目的很简单，插上U盘后能自动挂载，但加点小要求：第一，挂载的目录要在/media上。第二，挂载的目录名要和系统识别U盘的名字一样。比如，我有一个三个区的U盘，怼入后fdisk -l看一下看到它为/dev/sdb1\2\3，那么正常来讲，它应该挂载到/media/sdb1\2\3目录。</p><p>那基于这个目标，撸起袖子干。本来linux内置udev服务可以完美解决。但参考一堆教程配置来配置去有各种奇奇怪怪的问题达不到预期目的。外加上由于这个是小系统被剪过（从2G剪到550M的fedora…），缺了什么咱们还真不确定。</p><p>至此，一个低端的自动挂载程序想法悄咪咪的生成。但求能work out。</p><a id="more"></a><h4 id="思路与想法"><a href="#思路与想法" class="headerlink" title="思路与想法"></a>思路与想法</h4><p>简单的说，就是不断检查系统硬盘分区，多了就加，少了就减。</p><p>当然这是个特例，因为目标系统定死了首先它只有一个硬盘装的是系统，也就是sda。其次它如果有新的硬盘进入系统，也只能是U盘。</p><p>所以分三块：</p><ol><li>流程控制，控制执行频率和挂载卸载执行分支；</li><li>查看系统硬盘状态，并得到相应数据；</li><li>生成硬盘信息数据结构，同步挂载卸载；</li></ol><p>流程控制，简单的采用while(1)和sleep控制，采用数据对比每番进行判断；<br>硬盘状态，在/proc/partitions可以读取，再加个wc -l细化处理可以简单得到当前硬盘数；<br>数据结构，由于每个硬盘可能有几个区，而代表每个区的是字符串结构，符合这种直接用二维数组，再由于顺序没有特别的重要，善用字符串比较和下标就行，所以总的来说算是一个比较离散的二维数组吧。</p><p>上流程图：</p><div align="center"><p><img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/amount_pic_1.jpg" alt="流程图"></p></div><p>由于也只有一条线程，也不用考虑数据的冲突，就一路往下跑就是了。</p><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p>细想整个流程最重要的部分，也就是有一个全局的二维数组来记录着当前挂载了的硬盘。<br>每当硬盘有变动，这个二维数组就产生相应的变化，那具体的增删，是有点点类似队列但又不是，因为你无法判断是哪个先出（是哪个磁盘先拔出来），考虑过链表，不过总共才四五个USB口用数组它不香吗。</p><p>那么假设现在挂载了个三个分区的U盘B，sdb1，sdb2，sdb3，那么在这个全局数组中数据应该是这样的：<br><img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_1.png" alt="数组1"></p><p>这时如果先插入两个分区的U盘C和一个分区的U盘D，它应该会进行添加即：<br><img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_1.png" alt="数组1">  —&gt;   <img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_2.png" alt="数组2">   —&gt;   <img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_3.png" alt="数组3"></p><p>而如果此时拔出U盘C，它该进行如下减少并调整：<br><img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_3.png" alt="数组3">   —&gt;   <img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_4.png" alt="数组4">   —&gt;   <img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/data_pic_5.png" alt="数组5"></p><p>添加的时候是从尾部添加，删除时及时移位进行前面的空位补全。其中有一个对应的全局变量记录着当前挂载的硬盘数，可以用作这个全局数组的下标进行处理。</p><h4 id="代码层级"><a href="#代码层级" class="headerlink" title="代码层级"></a>代码层级</h4><p>从代码层级上说，从上往下简要的几个重要部份。<br>宏定义和全局，全局也就上述提到那俩~</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PARTITION_CNT_MAX50<span class="comment">//最大接入硬盘数，稍微给大点没事</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PARTITION_LEN_SIZE5<span class="comment">//最大分区名字长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEEP_TIME_US1000*500<span class="comment">//睡眠时间，等于是频率</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFF_SIZE1024*4<span class="comment">//取得数据中转缓存</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_SIZE100<span class="comment">//存放Linux命令缓存</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFF_SIZE_MINOR10<span class="comment">//取得数据中转小缓存</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LAST_DISK_POINT  <span class="meta-string">"sda1"</span><span class="comment">//固有硬盘的最后一个，往下都是添加的</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NORMAL_DISK_NUM4<span class="comment">//没新接硬盘时的正常/proc/partitions行数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG<span class="comment">//调试开关</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> g_disk_mount[PARTITION_CNT_MAX][PARTITION_LEN_SIZE] = &#123;<span class="number">0</span>&#125;;  </span><br><span class="line"><span class="keyword">int</span> g_disk_mount_cnt = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><hr><p>一开始先检查硬盘数目，将数据转化成自己想要的信息：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check_Disk_Num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> disk_num;</span><br><span class="line"><span class="keyword">char</span> buff[BUFF_SIZE_MINOR] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> cmd[CMD_SIZE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">sprintf</span>(cmd, <span class="string">"cat /proc/partitions | wc -l"</span>);</span><br><span class="line">FILE *fp = popen(cmd, <span class="string">"r"</span>);</span><br><span class="line"><span class="keyword">while</span>( fgets(buff, BUFF_SIZE_MINOR<span class="number">-1</span>, fp) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">disk_num = atoi(buff);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"check disk num:  %d\n"</span>, disk_num);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">pclose(fp);</span><br><span class="line"><span class="keyword">return</span> disk_num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>每当检测到硬盘数目增加，会先取得增加的硬盘名字列表，保存在disk[]这个数组里：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *p = <span class="built_in">strstr</span>(buff,LAST_DISK_POINT);</span><br><span class="line"><span class="keyword">if</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    disk_partition_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (disk_partition_cnt &gt;= PARTITION_CNT_MAX)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        p = <span class="built_in">strstr</span>(p + <span class="number">4</span>,<span class="string">"sd"</span>);</span><br><span class="line">        <span class="keyword">if</span>(p != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//get mount disk list</span></span><br><span class="line">            <span class="built_in">memset</span>(disk[disk_partition_cnt], <span class="number">0</span>, PARTITION_LEN_SIZE);</span><br><span class="line">            <span class="built_in">memcpy</span>(disk[disk_partition_cnt], p, <span class="number">4</span>); </span><br><span class="line">            change_Enter(disk[disk_partition_cnt]);</span><br><span class="line">            disk_partition_cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>得到数组列表，判断下是否单分区是否已存在，进行全局数据添加操作和系统挂载：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//judge and add to global</span></span><br><span class="line">disk_mount_cnt_temp = g_disk_mount_cnt;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; disk_partition_cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (disk_Is_Exit(disk[i]))</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//if len=3 disk have no partition</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(disk[i]) == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !disk_Is_Single_Partition(disk[i]))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memcpy</span>(g_disk_mount[g_disk_mount_cnt], disk[i], <span class="built_in">strlen</span>(disk[i]));</span><br><span class="line">    g_disk_mount_cnt++;</span><br><span class="line">&#125;</span><br><span class="line">run_Mount(g_disk_mount_cnt - disk_mount_cnt_temp);</span><br></pre></td></tr></table></figure><hr><p>根据获取的实际挂载磁盘信息和全局数组进行比对，如果发现实际的少了些，那要进行卸载和全局数组调整删除操作了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; g_disk_mount_cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strstr</span>(buff,g_disk_mount[i]) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(cmd, <span class="number">0</span>, CMD_SIZE);</span><br><span class="line">        <span class="built_in">sprintf</span>(cmd,<span class="string">"umount /media/%s"</span>,g_disk_mount[i]);</span><br><span class="line">        <span class="keyword">if</span> ( <span class="number">0</span> != run_System_Cmd(cmd))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(cmd, <span class="number">0</span>, CMD_SIZE);</span><br><span class="line">            <span class="built_in">sprintf</span>(cmd,<span class="string">"umount /media/%s -l"</span>,g_disk_mount[i]);</span><br><span class="line">            run_System_Cmd(cmd);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(cmd, <span class="number">0</span>, CMD_SIZE);</span><br><span class="line">        <span class="built_in">sprintf</span>(cmd, <span class="string">"rm /media/%s -rf"</span>, g_disk_mount[i]);</span><br><span class="line">        run_System_Cmd(cmd);</span><br><span class="line"></span><br><span class="line">        disk_umount_pos[disk_umount_cnt] = i;</span><br><span class="line">        disk_umount_cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>卸载系统里已经没有了的硬盘后，进行数组的清除和移位操作：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//clear the umount disk from global</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; disk_umount_cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (disk_umount_pos[i] == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(g_disk_mount[disk_umount_pos[i]], <span class="number">0</span>, PARTITION_LEN_SIZE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//reset the global</span></span><br><span class="line">g_disk_mount_cnt = g_disk_mount_cnt - disk_umount_cnt;</span><br><span class="line"><span class="keyword">int</span> temp_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; PARTITION_CNT_MAX; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (temp_cnt == g_disk_mount_cnt)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(g_disk_mount[i]) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(g_disk_mount[temp_cnt], g_disk_mount[i], PARTITION_LEN_SIZE);</span><br><span class="line">        temp_cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = temp_cnt; i &lt; PARTITION_CNT_MAX; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">memset</span>(g_disk_mount[i], <span class="number">0</span>, PARTITION_LEN_SIZE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要操作就这么多，当然还有很多细代码块，实现的方法也有很多。<br>还是那句话，能work就行。。。</p><h4 id="终语"><a href="#终语" class="headerlink" title="终语"></a>终语</h4><p>是有点儿low的，不过的确也能按照要求完成任务，最起码baseline是达到的。<br>还是挺感概这个哈皮方法能上的了台~毕竟当初记得有一个作业，说把开发板作为一个电子相册，插入满是图片的U盘时开发版自动挂载U盘并显示图片出来。<br>哈哈哈如今竟然用到了，只不过别人变成了实际的用处，用在哪咱也不知道也不敢问，但完成底层的挂卸载管他怎么操作呢。</p><p>最后放上挂卸载时程序消耗图吧和一个服务检测这个程序会不会挂掉，挂掉就拉起来：<br><img src="/2019/12/02/%E5%82%BB%E7%93%9C%E5%BC%8F%E7%9A%84LinuxU%E7%9B%98%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD-C%E8%AF%AD%E8%A8%80/automount_cost.png" alt="耗费资源"></p><p>鹅还有哈皮代码：<br><a href="/download/automount.c" ">automount</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;能work就行&quot;&gt;&lt;a href=&quot;#能work就行&quot; class=&quot;headerlink&quot; title=&quot;能work就行&quot;&gt;&lt;/a&gt;能work就行&lt;/h4&gt;&lt;p&gt;目的很简单，插上U盘后能自动挂载，但加点小要求：第一，挂载的目录要在/media上。第二，挂载的目录名要和系统识别U盘的名字一样。比如，我有一个三个区的U盘，怼入后fdisk -l看一下看到它为/dev/sdb1\2\3，那么正常来讲，它应该挂载到/media/sdb1\2\3目录。&lt;/p&gt;
&lt;p&gt;那基于这个目标，撸起袖子干。本来linux内置udev服务可以完美解决。但参考一堆教程配置来配置去有各种奇奇怪怪的问题达不到预期目的。外加上由于这个是小系统被剪过（从2G剪到550M的fedora…），缺了什么咱们还真不确定。&lt;/p&gt;
&lt;p&gt;至此，一个低端的自动挂载程序想法悄咪咪的生成。但求能work out。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux" scheme="https://nightcivet.live/tags/linux/"/>
    
      <category term="技术" scheme="https://nightcivet.live/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="C" scheme="https://nightcivet.live/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>树莓派hexo辛酸史</title>
    <link href="https://nightcivet.live/2019/11/28/%E6%A0%91%E8%8E%93%E6%B4%BEhexo%E8%BE%9B%E9%85%B8%E5%8F%B2/"/>
    <id>https://nightcivet.live/2019/11/28/%E6%A0%91%E8%8E%93%E6%B4%BEhexo%E8%BE%9B%E9%85%B8%E5%8F%B2/</id>
    <published>2019-11-28T10:09:04.000Z</published>
    <updated>2019-12-02T07:41:06.886Z</updated>
    
    <content type="html"><![CDATA[<h4 id="折腾不息，生命不止"><a href="#折腾不息，生命不止" class="headerlink" title="折腾不息，生命不止"></a>折腾不息，生命不止</h4><p>那天看见房间里的一角里面的那<del>寂寞的</del>吃灰的树莓派，于心不忍。</p><p>恰好那时听一个很牛逼的鹅厂师兄的讲座，说他有用hexo博客。</p><p>加上一个看到一个心动的博客介绍指导 <a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">遇见西门</a></p><p>我突然涌起一股想用这个卡片搭一个hexo博客的想法！（激情澎湃）</p><a id="more"></a><h4 id="树莓派系统与登录"><a href="#树莓派系统与登录" class="headerlink" title="树莓派系统与登录"></a>树莓派系统与登录</h4><p>之前曾经在树莓派上配置了一些文件自动拨号并作为一个无线路由，结果换了网络后再也连不上它了。</p><p>一开机就在那使劲拨号我也很绝望。。。只能重装系统了是吧。</p><p>装树莓派系统还是很多很多教程也比较容易的，<a href="https://blog.csdn.net/yzy_1996/article/details/82916940" target="_blank" rel="noopener">这里按照了这个</a>。只不过这个镜像资源实在太太太难找了吧，国内镜像网找不到，一些奇奇怪怪的网址有是有但也不敢下啊，<del>官网镜像慢得一</del>。后来发现在官网只下种子然后用迅雷打开，发现了新大陆！</p><p><a href="https://blog.csdn.net/weixin_43336281/article/details/97373288" target="_blank" rel="noopener">装上系统第一件事就是换源</a>，换完后立刻update，为后续做准备。</p><p>登录的话有putty啦vnc啦win的远程啦，可我就不同，我要teamview，我贪用teamview的远程。</p><p><a href="https://blog.csdn.net/realdonaldtrump/article/details/79694196" target="_blank" rel="noopener">轮子还是有的</a>，teamview尽量下15吧毕竟出事不久。但还是有坑，在辣个晚上，我按照所有教程设置了teamview密码在查看info中去连那个ID，连不上很绝望。那时无意的一点teamview图形界面启动看见了图形界面的ID和teamviewer –info显示的ID是不同的，连那个图形的突然就行了。</p><p>可是在卡片上运行这个的性能和速度，<del>谁用谁知道</del></p><h4 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h4><p>关键还是要有nodejs和npm啦，好吧还是找<a href="https://www.cnblogs.com/imapla/p/5532985.html" target="_blank" rel="noopener">轮子</a>，这里注意树莓派的架构版本，我的是3b，uname一下发现是arm7l，下载对应的版本即可。搭建按照遇见西门教程没有问题，hexo s然后上浏览器一看它出来鸟！！！（泪流满面）</p><p>后面的一切操作，什么主题，插件，文章，githubpage，啊哈都是支持的！</p><h4 id="其实"><a href="#其实" class="headerlink" title="其实"></a>其实</h4><p>其实没有必要。。</p><p>这个用派来搞有一个最大的愿景就是方便吧？比如我能随时随地写博客因为我能随时随地带着卡片，可如今云辣么多这种可携带性还有没有意义呢。</p><p>不管有没有意义，这卡片卡死了好几遍。这个是硬伤。</p><p>但折腾一下，就是其本身的魅力，尽管我已经放弃它了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;折腾不息，生命不止&quot;&gt;&lt;a href=&quot;#折腾不息，生命不止&quot; class=&quot;headerlink&quot; title=&quot;折腾不息，生命不止&quot;&gt;&lt;/a&gt;折腾不息，生命不止&lt;/h4&gt;&lt;p&gt;那天看见房间里的一角里面的那&lt;del&gt;寂寞的&lt;/del&gt;吃灰的树莓派，于心不忍。&lt;/p&gt;
&lt;p&gt;恰好那时听一个很牛逼的鹅厂师兄的讲座，说他有用hexo博客。&lt;/p&gt;
&lt;p&gt;加上一个看到一个心动的博客介绍指导 &lt;a href=&quot;https://www.simon96.online/2018/10/12/hexo-tutorial/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;遇见西门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我突然涌起一股想用这个卡片搭一个hexo博客的想法！（激情澎湃）&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="技术" scheme="https://nightcivet.live/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="树莓派" scheme="https://nightcivet.live/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="hexo" scheme="https://nightcivet.live/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>释然</title>
    <link href="https://nightcivet.live/2019/11/27/the-break-heard/"/>
    <id>https://nightcivet.live/2019/11/27/the-break-heard/</id>
    <published>2019-11-27T01:20:01.000Z</published>
    <updated>2019-11-28T02:54:07.291Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="Hey, password is required here." />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7b73a1dab6bed8ef163aa872e461e11316b3f223ee265455928e22647a9957ec">b31e22a21472225c8a0a855f3e97ce9495f34f984deb7bbb51c1b2292eb303fa83d842ef848a1afe786c0e95da05ec91b370efc0dc4121f58e6ace6d1d9a0879cd9a897a7e08f3a1a9e202ad35052c50</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://nightcivet.live/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
